<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.sumscope.cdhplus.web.mapper.ApiUsageMapper">
    <select id="apiUsageRate" resultType="com.sumscope.cdhplus.web.domain.ApiUsageRate">
        SELECT APINAME, COUNT(APINAME) AS COUNTAPI FROM t_log where CURDATE() &lt;=
        CREATETIME and CREATETIME &lt; (CURDATE() + INTERVAL 1 DAY) AND APINAME != '' GROUP
        BY APINAME ORDER BY COUNTAPI DESC <!--# 当天的API使用频率-->
    </select>

    <select id="apiUsageTakeTime" resultType="com.sumscope.cdhplus.web.domain.ApiUsageTakeTime">
        SELECT APINAME,AVG(SQL_TAKETIME) AS SQLTAKETIME FROM t_log where CURDATE() &lt;=
        CREATETIME AND CREATETIME &lt; (CURDATE() + INTERVAL 1 DAY) AND APINAME != '' GROUP
        BY APINAME ORDER BY SQLTAKETIME DESC #当天的 SQLTAKETIME
    </select>

    <select id="aApiUsageDetails" parameterType="Map" resultType="com.sumscope.cdhplus.web.domain.ApiUsageDetails">
        SELECT USERNAME, MSG_DETAIL AS MSGDETAIL, COUNT(case when LOGLEVEL='warn' then LOGLEVEL end) AS COUNTSQL,
        COUNT(case when LOGLEVEL='Error' then LOGLEVEL end) AS COUNTERROR, AVG(SQL_TAKETIME) AS SQLTAKETIME FROM t_log
        WHERE APINAME=#{apiName} AND CURDATE() &lt;=
        CREATETIME AND CREATETIME &lt; (CURDATE() + INTERVAL 1 DAY) GROUP BY MSGDETAIL ORDER BY SQLTAKETIME DESC LIMIT
        #{page}, #{size}
    </select>

    <select id="apiUsageByUsersRate" resultType="com.sumscope.cdhplus.web.domain.ApiUsageByUsersRate">
        SELECT USERNAME,COUNT(USERNAME) AS apiUsageByUserRate FROM t_log where CURDATE() &lt;=
        CREATETIME AND CREATETIME &lt; (CURDATE() + INTERVAL 1 DAY) AND USERNAME
        != '' GROUP BY USERNAME ORDER BY apiUsageByUserRate DESC #当天的用户访问API次数排名
    </select>

    <select id="aUserUsageApiList" parameterType="Map" resultType="com.sumscope.cdhplus.web.domain.UserUsageApiList">
        SELECT APINAME, COUNT(APINAME) AS COUNTAPI FROM t_log WHERE USERNAME=#{userName} AND APINAME != '' AND CURDATE() &lt;=
        CREATETIME AND CREATETIME &lt; (CURDATE() + INTERVAL 1 DAY)
        GROUP BY APINAME ORDER BY COUNTAPI DESC LIMIT #{page}, #{size} #某个用户访问的API列表
    </select>

    <select id="errorDetails" parameterType="Map" resultType="com.sumscope.cdhplus.web.domain.ErrorDetails">
        SELECT LOGID as logId,LOGTYPE as logType,USERNAME as userName,CLASSNAME as className,METHOD as method,CREATETIME
        as createTime,MSG as msg,SQL_ROWCOUNT as sqlRowCount,MSG_DETAIL as msgDetail,APINAME as apiName,SQL_COLCOUNT as
        sqlColcount,SQL_TAKETIME as sqlTakeTime,DATA_SOURCE_ID as dataSource FROM t_log WHERE LOGLEVEL='Error'
        AND CURDATE() &lt;=
        CREATETIME AND CREATETIME &lt; (CURDATE() + INTERVAL 1 DAY)
        <if test="userName != null &amp; userName != ''">
            AND USERNAME LIKE CONCAT('%',#{userName},'%')
        </if>
        <if test="className != null &amp; className != ''">
            AND CLASSNAME LIKE CONCAT('%',#{className},'%')
        </if>
        <if test="method != null &amp; method != ''">
            AND METHOD LIKE CONCAT('%',#{method},'%')
        </if>
        <if test="apiName != null &amp; apiName != ''">
            AND APINAME LIKE CONCAT('%',#{apiName},'%')
        </if>
        <if test="dataSource != null &amp; dataSource != ''">
            AND DATA_SOURCE_ID LIKE CONCAT('%',#{dataSource},'%')
        </if>
        ORDER BY SQL_TAKETIME DESC LIMIT #{page}, #{size}
    </select>

    <select id="queryUserInfo" parameterType="Map" resultType="com.sumscope.cdhplus.web.domain.UserInfo">

    </select>

    <update id="createNewTable" parameterType="int">
        CREATE TABLE IF NOT EXISTS ${_parameter} (
        ID BIGINT NOT NULL AUTO_INCREMENT,
        USERNAME VARCHAR(50)  NOT NULL,
        PASSWORD VARCHAR(50)  NOT NULL,
        PRIMARY KEY (ID))
    </update>

    <update id="tableBackup" parameterType="int">
        CREATE TABLE IF NOT EXISTS ${_parameter} like t_log
    </update>

    <update id="insertT1IntoT2" parameterType="int">
        INSERT INTO ${_parameter} SELECT * FROM t_log GROUP BY LOGID;
    </update>



</mapper>